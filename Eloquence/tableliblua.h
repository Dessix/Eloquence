//Table Stringification Library helpfully provided by http://lua-users.org/wiki/TableUtils
const char* TABLELIBLUA = "function table.val_to_str ( v )\n"
	"if \"string\" == type( v ) then\n"
	"v = string.gsub( v, \"\\n\", \"\\\n\" )\n"
	"if string.match( string.gsub(v,\"[^\'\\\"]\",\"\"), \'^\"+$\' ) then\n"
	"return \"\'\" .. v .. \"\'\" end\n"
	"return \'\"\' .. string.gsub(v,\'\"\', \'\\\"\' ) .. \'\"\'\n"
	"else\n"
	"return \"table\" == type( v ) and table.tostring( v ) or\n"
	"tostring( v ) end end\n"
	"function table.key_to_str ( k )\n"
	"if \"string\" == type( k ) and string.match( k, \"^[_%a][_%a%d]*$\" ) then\n"
	"return k else return \"[\" .. table.val_to_str( k ) .. \"]\"\n end end\n"
	"function table.tostring( tbl )\n"
	"local result, done = {}, {}\n"
	"for k, v in ipairs( tbl ) do\n"
	"table.insert( result, table.val_to_str( v ) )\n"
	"done[ k ] = true end\n"
	"for k, v in pairs( tbl ) do\n"
	"if not done[ k ] then table.insert( result,\n"
	"table.key_to_str( k ) .. \"=\" .. table.val_to_str( v ) )\n"
	"end end\n"
	"return \"{\" .. table.concat( result, \",\" ) .. \"}\" end\n";
